#!/usr/bin/env python
# Copyright (c) 2014,2016,2019 - Adjacent Link LLC, Bridgewater,
# New Jersey
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
#  * Neither the name of Adjacent Link LLC nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# See toplevel COPYING for more information.
#

from __future__ import absolute_import, division, print_function
import zmq
import uuid
import sys
from optparse import OptionParser
import otestpoint.interface.discovery_pb2

usage = "%prog [OPTION]... ENDPOINT"

usage = """%prog [OPTION]... ENDPOINT

  ENDPOINT     TestPoint publisher
               <hostname>:port | <IPv4>:port | [<IPv6>]:port"""

description="""Query an OpenTestPoint publisher to get the list of test probes it
publishes."""

optionParser = OptionParser(usage=usage,
                            description=description)

(options, args) = optionParser.parse_args()

if len(args) < 1:
  print("missing endpoint")
  exit(1)


context = zmq.Context()

client = context.socket(zmq.REQ)

client.setsockopt(zmq.IPV4ONLY,0)

client.connect("tcp://%s" % args[0])

request = otestpoint.interface.discovery_pb2.DiscoveryRequest()
request.type =  otestpoint.interface.discovery_pb2.DiscoveryRequest.TYPE_DISCOVERY
client.send(request.SerializeToString())

msg = client.recv()

response =  otestpoint.interface.discovery_pb2.DiscoveryResponse()

response.ParseFromString(msg)

if response.type == \
   otestpoint.interface.discovery_pb2.DiscoveryResponse.TYPE_DISCOVERY:
  print(response.discovery.publish)
  for probe in response.discovery.names:
    print(probe)

elif response.type == \
     otestpoint.interface.discovery_pb2.DiscoveryResponse.TYPE_ERROR:
  print(response.error.what, file=sys.stderr)
  exit(1)

else:
  print("unknown discovery response", file=sys.stderr)
  exit(1)
